- - - - - - - - - - - - - - - - - - - - ЗАДАНИЕ - - - - - - - - - - - - - - - - - - - -

Задание 2.1
На основе программного кода из домашнего задания №1 реализуйте массив на основе существующих примитивных
или ссылочных типов данных.
Выполните обращение к массиву и базовые операции класса Arrays.
Оценить выполненные методы с помощью базового класса System.nanoTime().
Задание 2.2
На основе написанного кода в задании 2.1 реализуйте линейный и двоичный поиск.
Оценить алгоритмы линейного и двоичного поиска с помощью базового класса System.nanoTime(),
при необходимости расширьте уже существующий массив данных.
Задание 2.3
Создайте массив размером 400 элементов.
Выполните сортировку с помощью метода sort().
Оцените сортировку с помощью базового класса System.nanoTime().
Задание 2.4
На основе существующего массива данных из задания 2.3 реализуйте алгоритм сортировки пузырьком.
Оцените сортировку с помощью базового класса System.nanoTime().
Сравните время выполнения алгоритмы сортировки методом sort() из задания 2.1 и сортировку пузырьком.
Задание 2.5
На основе массива данных из задания 2.3 реализуйте алгоритм сортировки методом выбора.
Оцените сортировку с помощью базового класса System.nanoTime().
Сравните с временем выполнения алгоритмов сортировки из прошлых заданий 2.3 и 2.4.
Задание 2.6
На основе массива данных из задания 2.3 реализуйте алгоритм сортировки методом вставки.
Оцените сортировку с помощью базового класса System.nanoTime().
Сравните с временем выполнения алгоритмов сортировки из прошлых заданий 2.3, 2.4 и 2.5.

- - - - - - - - - - - - - - - - - - - - КОНСОЛЬ - - - - - - - - - - - - - - - - - - - -

- - - - - Задание 2.1 - - - - -
 на примере массива из 400 строковых значений от 5 до 10 символов
  базовые методы Arrays и их продолжительность
   arr = Arrays.copyOf()): 16800
   copyArr = Arrays.copyOfRange()): 22400
   Arrays.equals(arr, copyArr) = true: 63900
   Arrays.sort(arr): 529800
   Arrays.fill(copyArr...: 21900
   Arrays.toString(arr): 419900
  200 случайных обращений к массиву: 36700
- - - - - Задание 2.2 - - - - -
 линейный поиск, индекс = 259: 66700
 двоичный поиск, индекс = 259: 15800
- - - - - Задание 2.3 - - - - -
 быстрая сортировка: 665600
- - - - - Задание 2.4 - - - - -
 пузырьковая сортировка: 6463900
- - - - - Задание 2.5 - - - - -
 сортировка методом выбора: 5463200
- - - - - Задание 2.6 - - - - -
 сортировка методом вставки: 2784600
